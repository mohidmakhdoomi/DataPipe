apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-worker
  namespace: data-pipeline
  labels:
    app: airflow
    component: worker
spec:
  replicas: 2
  selector:
    matchLabels:
      app: airflow
      component: worker
  template:
    metadata:
      labels:
        app: airflow
        component: worker
    spec:
      containers:
      - name: airflow-worker
        image: data-pipeline/airflow:latest
        command: ["airflow", "celery", "worker"]
        envFrom:
        - configMapRef:
            name: airflow-config
        - configMapRef:
            name: data-pipeline-config
        env:
        - name: AIRFLOW__CORE__FERNET_KEY
          valueFrom:
            secretKeyRef:
              name: airflow-secret
              key: fernet-key
        - name: AIRFLOW__WEBSERVER__SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: airflow-secret
              key: secret-key
        - name: AIRFLOW__CORE__EXECUTOR
          value: "CeleryExecutor"
        - name: AIRFLOW__CELERY__BROKER_URL
          value: "redis://redis:6379/0"
        - name: AIRFLOW__CELERY__RESULT_BACKEND
          value: "redis://redis:6379/0"
        volumeMounts:
        - name: airflow-logs
          mountPath: /opt/airflow/logs
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - "celery -A airflow.executors.celery_executor inspect ping -d celery@$(hostname)"
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - "celery -A airflow.executors.celery_executor inspect ping -d celery@$(hostname)"
          initialDelaySeconds: 10
          periodSeconds: 10
      volumes:
      - name: airflow-logs
        persistentVolumeClaim:
          claimName: airflow-logs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: data-pipeline
  labels:
    app: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
          name: redis
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"
        livenessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: data-pipeline
  labels:
    app: redis
spec:
  ports:
  - port: 6379
    targetPort: 6379
    name: redis
  selector:
    app: redis
  type: ClusterIP
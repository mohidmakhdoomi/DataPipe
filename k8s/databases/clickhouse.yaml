apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: clickhouse
  namespace: data-storage
  labels:
    app: clickhouse
spec:
  serviceName: clickhouse
  replicas: 1
  selector:
    matchLabels:
      app: clickhouse
  template:
    metadata:
      labels:
        app: clickhouse
    spec:
      containers:
      - name: clickhouse
        image: clickhouse/clickhouse-server:23.12
        ports:
        - containerPort: 8123
          name: http
        - containerPort: 9000
          name: native
        - containerPort: 9009
          name: interserver
        env:
        - name: CLICKHOUSE_DB
          valueFrom:
            secretKeyRef:
              name: clickhouse-secret
              key: database
        - name: CLICKHOUSE_USER
          valueFrom:
            secretKeyRef:
              name: clickhouse-secret
              key: username
        - name: CLICKHOUSE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: clickhouse-secret
              key: password
        volumeMounts:
        - name: clickhouse-data
          mountPath: /var/lib/clickhouse
        - name: clickhouse-config
          mountPath: /etc/clickhouse-server/config.d
        - name: clickhouse-users
          mountPath: /etc/clickhouse-server/users.d
        - name: clickhouse-init
          mountPath: /docker-entrypoint-initdb.d
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        livenessProbe:
          httpGet:
            path: /ping
            port: 8123
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ping
            port: 8123
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: clickhouse-data
        persistentVolumeClaim:
          claimName: clickhouse-data
      - name: clickhouse-config
        configMap:
          name: clickhouse-config
      - name: clickhouse-users
        configMap:
          name: clickhouse-users
      - name: clickhouse-init
        configMap:
          name: clickhouse-init-scripts
---
apiVersion: v1
kind: Service
metadata:
  name: clickhouse
  namespace: data-storage
  labels:
    app: clickhouse
spec:
  ports:
  - port: 8123
    targetPort: 8123
    name: http
  - port: 9000
    targetPort: 9000
    name: native
  selector:
    app: clickhouse
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: clickhouse-config
  namespace: data-storage
data:
  config.xml: |
    <?xml version="1.0"?>
    <clickhouse>
        <logger>
            <level>information</level>
            <log>/var/log/clickhouse-server/clickhouse-server.log</log>
            <errorlog>/var/log/clickhouse-server/clickhouse-server.err.log</errorlog>
            <size>1000M</size>
            <count>10</count>
        </logger>
        
        <listen_host>0.0.0.0</listen_host>
        <http_port>8123</http_port>
        <tcp_port>9000</tcp_port>
        <interserver_http_port>9009</interserver_http_port>
        
        <max_memory_usage>10000000000</max_memory_usage>
        <max_concurrent_queries>100</max_concurrent_queries>
        
        <compression>
            <case>
                <method>lz4</method>
            </case>
        </compression>
        
        <kafka>
            <auto_offset_reset>earliest</auto_offset_reset>
            <max_block_size>65536</max_block_size>
        </kafka>
    </clickhouse>
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: clickhouse-users
  namespace: data-storage
data:
  users.xml: |
    <?xml version="1.0"?>
    <clickhouse>
        <users>
            <analytics_user>
                <password>analytics_password</password>
                <networks>
                    <ip>::/0</ip>
                </networks>
                <profile>default</profile>
                <quota>default</quota>
                <databases>
                    <database>analytics</database>
                </databases>
                <access_management>1</access_management>
            </analytics_user>
        </users>
    </clickhouse>
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: clickhouse-init-scripts
  namespace: data-storage
data:
  01-create-database.sql: |
    CREATE DATABASE IF NOT EXISTS analytics;
    
    CREATE TABLE IF NOT EXISTS analytics.user_events (
        event_id String,
        user_id String,
        session_id String,
        event_type String,
        timestamp DateTime64(3),
        page_url Nullable(String),
        product_id Nullable(String),
        search_query Nullable(String),
        device_type String,
        browser String,
        ip_address String,
        properties String,
        date Date MATERIALIZED toDate(timestamp)
    ) ENGINE = MergeTree()
    PARTITION BY date
    ORDER BY (timestamp, user_id, event_type)
    TTL timestamp + INTERVAL 1 YEAR;
    
    CREATE TABLE IF NOT EXISTS analytics.transactions (
        transaction_id String,
        user_id String,
        product_id String,
        quantity UInt32,
        unit_price Decimal(10,2),
        total_amount Decimal(10,2),
        discount_amount Decimal(10,2),
        tax_amount Decimal(10,2),
        status String,
        payment_method String,
        created_at DateTime64(3),
        date Date MATERIALIZED toDate(created_at)
    ) ENGINE = MergeTree()
    PARTITION BY date
    ORDER BY (created_at, user_id, transaction_id)
    TTL created_at + INTERVAL 2 YEARS;
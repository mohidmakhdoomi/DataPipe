# Kind Configuration for Data Ingestion Pipeline
# 3-node cluster architecture (1 control-plane + 2 workers)
# Supports 3-broker Kafka cluster with replication factor 3
# Based on working desktop cluster configuration

kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
name: data-ingestion

# 3-node cluster: 1 control-plane + 2 worker nodes
# This architecture supports distributed services with proper replication
nodes:
- role: control-plane
  # Control-plane node with ingress capabilities
  kubeadmConfigPatches:
  - |
    kind: InitConfiguration
    nodeRegistration:
      kubeletExtraArgs:
        node-labels: "ingress-ready=true"
  
  # Port mappings for direct host access to services
  # Critical for local development and testing
  extraPortMappings:
  # PostgreSQL database access
  - containerPort: 30432
    hostPort: 5432
    protocol: TCP
    listenAddress: "127.0.0.1"
  
  # Kafka broker access  
  - containerPort: 30092
    hostPort: 9092
    protocol: TCP
    listenAddress: "127.0.0.1"
  
  # Schema Registry access (for future tasks)
  - containerPort: 30081
    hostPort: 8081
    protocol: TCP
    listenAddress: "127.0.0.1"
  
  # Kafka Connect REST API (for future tasks)
  - containerPort: 30083
    hostPort: 8083
    protocol: TCP
    listenAddress: "127.0.0.1"

# Worker node 1 - hosts data services workloads
- role: worker
  kubeadmConfigPatches:
  - |
    kind: JoinConfiguration
    nodeRegistration:
      kubeletExtraArgs:
        node-labels: "workload-type=data-services"

# Worker node 2 - hosts data services workloads  
- role: worker
  kubeadmConfigPatches:
  - |
    kind: JoinConfiguration
    nodeRegistration:
      kubeletExtraArgs:
        node-labels: "workload-type=data-services"

# Containerd configuration for efficient image management
containerdConfigPatches:
- |-
  [plugins."io.containerd.grpc.v1.cri".registry.mirrors."localhost:5001"]
    endpoint = ["http://kind-registry:5000"]
# Test deployment to validate Kind cluster functionality
# This will verify port mappings and cluster health

apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-test
  labels:
    app: nginx-test
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-test
  template:
    metadata:
      labels:
        app: nginx-test
    spec:
      containers:
      - name: nginx
        image: nginx:alpine
        ports:
        - containerPort: 80
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"

---
apiVersion: v1
kind: Service
metadata:
  name: nginx-test-svc
spec:
  type: NodePort
  selector:
    app: nginx-test
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
    nodePort: 30080

---
# Test PostgreSQL-like service to validate port 5432 mapping
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-test
  labels:
    app: postgres-test
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-test
  template:
    metadata:
      labels:
        app: postgres-test
    spec:
      containers:
      - name: postgres
        image: postgres:15-alpine
        env:
        - name: POSTGRES_PASSWORD
          value: "testpass"
        - name: POSTGRES_DB
          value: "testdb"
        ports:
        - containerPort: 5432
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"

---
apiVersion: v1
kind: Service
metadata:
  name: postgres-test-svc
spec:
  type: NodePort
  selector:
    app: postgres-test
  ports:
  - protocol: TCP
    port: 5432
    targetPort: 5432
    nodePort: 30432
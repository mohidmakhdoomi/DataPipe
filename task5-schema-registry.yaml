apiVersion: apps/v1
kind: Deployment
metadata:
  name: schema-registry
  namespace: data-ingestion
  labels:
    app: schema-registry
    component: streaming
spec:
  replicas: 1
  selector:
    matchLabels:
      app: schema-registry
      component: streaming
  template:
    metadata:
      labels:
        app: schema-registry
        component: streaming
    spec:
      serviceAccountName: kafka-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: schema-registry
        image: confluentinc/cp-schema-registry:7.4.0
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
          seccompProfile:
            type: RuntimeDefault
          capabilities:
            drop:
            - ALL
        env:
        - name: SCHEMA_REGISTRY_HOST_NAME
          value: "schema-registry"
        - name: SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS
          value: "kafka-0.kafka-headless.data-ingestion.svc.cluster.local:9092,kafka-1.kafka-headless.data-ingestion.svc.cluster.local:9092,kafka-2.kafka-headless.data-ingestion.svc.cluster.local:9092"
        - name: SCHEMA_REGISTRY_LISTENERS
          value: "http://0.0.0.0:8081"
        - name: SCHEMA_REGISTRY_KAFKASTORE_TOPIC
          value: "_schemas"
        - name: SCHEMA_REGISTRY_KAFKASTORE_TOPIC_REPLICATION_FACTOR
          value: "3"
        - name: SCHEMA_REGISTRY_DEBUG
          value: "false"
        - name: SCHEMA_REGISTRY_HEAP_OPTS
          value: "-Xmx384m -Xms384m -XX:+UseG1GC -XX:MaxGCPauseMillis=20"
        ports:
        - name: http
          containerPort: 8081
          protocol: TCP
        resources:
          requests:
            memory: "384Mi"
            cpu: "250m"
          limits:
            memory: "500Mi"
            cpu: "500m"
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        livenessProbe:
          httpGet:
            path: /subjects
            port: 8081
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /subjects
            port: 8081
          initialDelaySeconds: 30
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 5
      volumes:
      - name: tmp
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: schema-registry
  namespace: data-ingestion
  labels:
    app: schema-registry
    component: streaming
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 8081
    targetPort: 8081
    protocol: TCP
  selector:
    app: schema-registry
    component: streaming
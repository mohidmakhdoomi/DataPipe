apiVersion: v1
kind: ConfigMap
metadata:
  name: schema-registry-config
  namespace: data-ingestion
  labels:
    app: schema-registry
    component: schema-management
  annotations:
    description: "Schema Registry configuration using environment variables"
    last-updated: "2025-08-01"
data:
  # Kafka Connection Configuration
  SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "kafka-headless.data-ingestion.svc.cluster.local:9092"
  SCHEMA_REGISTRY_KAFKASTORE_TOPIC: "_schemas"
  SCHEMA_REGISTRY_KAFKASTORE_TOPIC_REPLICATION_FACTOR: "3"
  
  # Schema Registry Configuration  
  SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8081"
  SCHEMA_REGISTRY_HOST_NAME: "schema-registry"
  SCHEMA_REGISTRY_DEBUG: "false"
  
  # Schema Compatibility Configuration
  SCHEMA_REGISTRY_SCHEMA_COMPATIBILITY_LEVEL: "BACKWARD"
  
  # Performance Configuration
  SCHEMA_REGISTRY_KAFKASTORE_INIT_TIMEOUT_MS: "300000"
  SCHEMA_REGISTRY_KAFKASTORE_TIMEOUT_MS: "10000"
  
  # Security Configuration
  SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL: "PLAINTEXT"
  
  # Logging Configuration
  SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: "INFO"
  
  # Group ID Configuration
  SCHEMA_REGISTRY_SCHEMA_REGISTRY_GROUP_ID: "schema-registry"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: schema-registry
  namespace: data-ingestion
  labels:
    app: schema-registry
    component: schema-management
spec:
  replicas: 1
  selector:
    matchLabels:
      app: schema-registry
      component: schema-management
  template:
    metadata:
      labels:
        app: schema-registry
        component: schema-management
    spec:
      enableServiceLinks: false  # needed to prevent "PORT is deprecated. Please use SCHEMA_REGISTRY_LISTENERS instead."
      serviceAccountName: schema-registry-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: schema-registry
        image: confluentinc/cp-schema-registry:7.4.0
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
          seccompProfile:
            type: RuntimeDefault
          capabilities:
            drop:
            - ALL
        # Load all configuration from ConfigMap as environment variables
        envFrom:
        - configMapRef:
            name: schema-registry-config
        env:
        # JVM Configuration - kept as env var for container-level tuning
        - name: SCHEMA_REGISTRY_HEAP_OPTS
          value: "-Xmx256m -Xms256m -XX:+UseG1GC -XX:MaxGCPauseMillis=20"
        ports:
        - name: http
          containerPort: 8081
          protocol: TCP
        resources:
          requests:
            memory: "384Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        volumeMounts:
        - name: schema-registry-tmp
          mountPath: /etc/schema-registry
        - name: tmp
          mountPath: /tmp
        livenessProbe:
          exec:
            command:
            - "/bin/sh"
            - "-c"
            - "curl --fail http://localhost:8081/subjects"
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - "/bin/sh"
            - "-c"
            - "curl --fail http://localhost:8081/subjects"
          initialDelaySeconds: 30
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          exec:
            command:
            - "/bin/sh"
            - "-c"
            - "curl --fail http://localhost:8081/subjects"
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 12
      volumes:
      - name: schema-registry-tmp
        emptyDir: {}
      - name: tmp
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: schema-registry
  namespace: data-ingestion
  labels:
    app: schema-registry
    component: schema-management
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 8081
    targetPort: 8081
    protocol: TCP
  selector:
    app: schema-registry
    component: schema-management
---
apiVersion: v1
kind: Service
metadata:
  name: schema-registry-nodeport
  namespace: data-ingestion
  labels:
    app: schema-registry
    component: schema-management
spec:
  type: NodePort
  ports:
  - name: http
    port: 8081
    targetPort: 8081
    nodePort: 30081
    protocol: TCP
  selector:
    app: schema-registry
    component: schema-management